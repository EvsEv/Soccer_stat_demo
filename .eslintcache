[{"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\index.js":"1","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\reportWebVitals.js":"2","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\root.js":"3","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\App\\App.js":"4","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\league.js":"5","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\team.js":"6","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\match.js":"7","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\ScrollToTop\\ScrollToTop.js":"8","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\layouts\\main\\MainLayout.js":"9","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\types.js":"10","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Header\\Header.js":"11","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\actions.js":"12","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Footer\\Footer.js":"13","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Navigation\\Navigation.js":"14","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\routes\\index.js":"15","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Logo\\Logo.js":"16","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\api\\index.js":"17","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\LeagueList.js":"18","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\CalendarLeague.js":"19","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\TeamList.js":"20","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\CalendarTeam.js":"21","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\SelectList\\SelectList.js":"22","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\LeagueItem\\LeagueItem.js":"23","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\TeamItem\\TeamItem.js":"24"},{"size":844,"mtime":1612931287278,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":233,"mtime":1612709060757,"results":"28","hashOfConfig":"26"},{"size":485,"mtime":1612905032207,"results":"29","hashOfConfig":"26"},{"size":727,"mtime":1612891701101,"results":"30","hashOfConfig":"26"},{"size":790,"mtime":1612905032264,"results":"31","hashOfConfig":"26"},{"size":644,"mtime":1612905032263,"results":"32","hashOfConfig":"26"},{"size":266,"mtime":1612179839955,"results":"33","hashOfConfig":"26"},{"size":2795,"mtime":1612908850010,"results":"34","hashOfConfig":"26"},{"size":504,"mtime":1612905032265,"results":"35","hashOfConfig":"26"},{"size":1012,"mtime":1612928602100,"results":"36","hashOfConfig":"26"},{"size":2979,"mtime":1612905032262,"results":"37","hashOfConfig":"26"},{"size":1494,"mtime":1612905032257,"results":"38","hashOfConfig":"26"},{"size":806,"mtime":1612908693680,"results":"39","hashOfConfig":"26"},{"size":1211,"mtime":1612905032267,"results":"40","hashOfConfig":"26"},{"size":372,"mtime":1612929723497,"results":"41","hashOfConfig":"26"},{"size":346,"mtime":1612817304913,"results":"42","hashOfConfig":"26"},{"size":1830,"mtime":1612928699229,"results":"43","hashOfConfig":"26"},{"size":7070,"mtime":1612929521869,"results":"44","hashOfConfig":"26"},{"size":3255,"mtime":1612928707824,"results":"45","hashOfConfig":"26"},{"size":7766,"mtime":1612929471206,"results":"46","hashOfConfig":"26"},{"size":647,"mtime":1612920292194,"results":"47","hashOfConfig":"26"},{"size":1545,"mtime":1612914282180,"results":"48","hashOfConfig":"26"},{"size":769,"mtime":1612916849475,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v14ir4",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\index.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\reportWebVitals.js",[],["103","104"],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\root.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\App\\App.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\league.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\team.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\reducers\\match.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\ScrollToTop\\ScrollToTop.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\layouts\\main\\MainLayout.js",["105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, Switch } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getLeagueList } from \"../../redux/actions\";\r\nimport { Routes } from \"../../routes\";\r\nimport { Header } from \"../../components/Header/Header\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport styles from \"./main-layout.module.scss\";\r\nimport { Drawer, List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nfunction MainLayout() {\r\n    const navigation = [\r\n        { id: 1, title: \"Список лиг\", url: \"/\", exact: true },\r\n        { id: 2, title: \"Список команд\", url: \"/team_list\" },\r\n        { id: 3, title: \"Календарь лиг\", url: \"/calendar_league\" },\r\n        { id: 4, title: \"Календарь команд\", url: \"/calendar_team\" },\r\n    ];\r\n\r\n    const [seasons, setSeasons] = useState([]);\r\n    const [isOpenMenu, setIsOpenMenu] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const current = new Date().getFullYear();\r\n        const newSeasons = [];\r\n        for (let i = 2018; i < current; i++) {\r\n            const season = `${i}/${i + 1}`;\r\n            newSeasons.push({ id: i, value: season });\r\n        }\r\n        setSeasons(newSeasons);\r\n        dispatch(getLeagueList());\r\n    }, []);\r\n\r\n    const toggleMenu = (isOpen) => (event) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n        setIsOpenMenu(isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className={styles[\"main-layout\"]}>\r\n            <Header toggleMenu={toggleMenu(true)} navigation={navigation} />\r\n\r\n            <main className=\"main\">\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Routes seasons={seasons} />\r\n                    </Switch>\r\n                </div>\r\n            </main>\r\n            <Drawer anchor=\"left\" open={isOpenMenu} onClose={toggleMenu(false)}>\r\n                <div\r\n                    role=\"presentation\"\r\n                    onClick={toggleMenu(false)}\r\n                    onKeyDown={toggleMenu(false)}\r\n                >\r\n                    <List>\r\n                        {navigation.map((text) => (\r\n                            <ListItem button key={text}>\r\n                                <NavLink to={text.url} exact={text.exact}>\r\n                                    {text.title}\r\n                                </NavLink>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainLayout;\r\n","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\types.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Header\\Header.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\redux\\actions.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Navigation\\Navigation.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\routes\\index.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\Logo\\Logo.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\api\\index.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\LeagueList.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\CalendarLeague.js",["107","108","109"],"import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SelectList } from \"../components/SelectList/SelectList\";\r\nimport {\r\n    clearMatches,\r\n    filterLeagueMatches,\r\n    getLeagueMatches,\r\n} from \"../redux/actions\";\r\nimport styles from \"./pages.module.scss\";\r\n\r\nexport const CalendarLeague = ({ seasons }) => {\r\n    const [leagueValue, setLeagueValue] = useState(\"\");\r\n    const [seasonValue, setSeasonValue] = useState(\"\");\r\n    const [dateFrom, setDateFrom] = useState(\"\");\r\n    const [dateTo, setDateTo] = useState(\"\");\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const leagues = useSelector((state) => state.league.leagues);\r\n    const matches = useSelector((state) => state.match.filteredMatches);\r\n\r\n    useEffect(() => {\r\n        dispatch(clearMatches());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            setLeagueValue(id);\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        let params = history.location.search.split(\"&\");\r\n\r\n        params.forEach((param) => {\r\n            switch (true) {\r\n                case param.includes(\"season\"):\r\n                    setSeasonValue(param.split(\"=\")[1]);\r\n                    break;\r\n                case param.includes(\"dateFrom\"):\r\n                    setDateFrom(param.split(\"=\")[1]);\r\n                    break;\r\n                case param.includes(\"dateTo\"):\r\n                    setDateTo(param.split(\"=\")[1]);\r\n                    break;\r\n            }\r\n        });\r\n    }, [history]);\r\n\r\n    const formSubmitHandler = () => {\r\n        const query = [];\r\n        if (seasonValue) {\r\n            query.push(`season=${seasonValue}`);\r\n        }\r\n\r\n        if (dateFrom && dateTo) {\r\n            query.push(`dateFrom=${dateFrom}`);\r\n            query.push(`dateTo=${dateTo}`);\r\n        }\r\n\r\n        let newUrl = \"\";\r\n\r\n        query.forEach((item, idx) => {\r\n            idx === 0 ? (newUrl += `?${item}`) : (newUrl += `&${item}`);\r\n        });\r\n\r\n        history.push(`/calendar_league/${leagueValue}${newUrl}`);\r\n        dispatch(getLeagueMatches(leagueValue, seasonValue, dateFrom, dateTo));\r\n    };\r\n\r\n    const handleSeasonChange = (event) => {\r\n        setSeasonValue(event.target.value);\r\n        setDateFrom(\"\");\r\n        setDateTo(\"\");\r\n    };\r\n\r\n    const handleDateFromChange = (event) => {\r\n        setDateFrom(event.target.value);\r\n        setSeasonValue(\"\");\r\n    };\r\n\r\n    const handleDateToChange = (event) => {\r\n        setDateTo(event.target.value);\r\n        setSeasonValue(\"\");\r\n    };\r\n\r\n    const clearDateHandler = () => {\r\n        setDateFrom(\"\");\r\n        setDateTo(\"\");\r\n    };\r\n\r\n    const inputChangeHandler = (event) => {\r\n        const { value } = event.target;\r\n        setSearchValue(value);\r\n        dispatch(filterLeagueMatches(value));\r\n    };\r\n\r\n    const printMatches = useMemo(() => {\r\n        const matchDay = { day: \"\", printed: false };\r\n        const matchTour = { tour: \"\", printed: false };\r\n\r\n        return matches.map((item) => {\r\n            if (matchDay.day !== item.utcDate.split(\"T\")[0]) {\r\n                matchDay.day = item.utcDate.split(\"T\")[0];\r\n                matchDay.printed = false;\r\n            } else {\r\n                matchDay.printed = true;\r\n            }\r\n\r\n            if (matchTour.tour !== item.matchday) {\r\n                matchTour.tour = item.matchday;\r\n                matchTour.printed = false;\r\n            } else {\r\n                matchTour.printed = true;\r\n            }\r\n\r\n            return (\r\n                <div key={item.id} className={styles.match}>\r\n                    {!matchTour.printed && (\r\n                        <p className={styles.tour}>{matchTour.tour} тур</p>\r\n                    )}\r\n                    {!matchDay.printed && (\r\n                        <p className={styles.day}>{matchDay.day}</p>\r\n                    )}\r\n                    {item.status === \"FINISHED\" ? (\r\n                        <p className={styles.finished}>\r\n                            {item.homeTeam.name}\r\n                            {item.score.fullTime.homeTeam}\r\n                            {item.score.fullTime.awayTeam}\r\n                            {item.awayTeam.name}\r\n                        </p>\r\n                    ) : (\r\n                        <p className={styles.versus}>\r\n                            {item.homeTeam.name} : {item.awayTeam.name}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            );\r\n        });\r\n    }, [matches]);\r\n    console.log(printMatches);\r\n    return (\r\n        <div className={styles.content}>\r\n            <h2 className={styles.centerTitle}>Календарь лиг</h2>\r\n            <form className={styles.form} onSubmit={formSubmitHandler}>\r\n                <SelectList\r\n                    name=\"Лиги\"\r\n                    items={leagues}\r\n                    value={leagueValue}\r\n                    setValue={(event) => setLeagueValue(event.target.value)}\r\n                />\r\n                <SelectList\r\n                    name=\"Сезоны\"\r\n                    items={seasons}\r\n                    value={seasonValue}\r\n                    setValue={handleSeasonChange}\r\n                />\r\n                <TextField\r\n                    label=\"Начало периода\"\r\n                    type=\"date\"\r\n                    value={dateFrom}\r\n                    onChange={handleDateFromChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n\r\n                <TextField\r\n                    label=\"Конец периода\"\r\n                    type=\"date\"\r\n                    value={dateTo}\r\n                    onChange={handleDateToChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <button\r\n                    className={styles.button}\r\n                    type=\"reset\"\r\n                    onClick={clearDateHandler}\r\n                    disabled={!(dateFrom || dateTo)}\r\n                >\r\n                    Сбросить период\r\n                </button>\r\n\r\n                <button\r\n                    className={styles.acept}\r\n                    disabled={\r\n                        !(leagueValue && (seasonValue || (dateFrom && dateTo)))\r\n                    }\r\n                    type=\"submit\"\r\n                >\r\n                    Показать подходящие матчи\r\n                </button>\r\n            </form>\r\n            <TextField\r\n                label=\"Поиск...\"\r\n                value={searchValue}\r\n                onChange={inputChangeHandler}\r\n                fullWidth\r\n            />\r\n            <div>{printMatches}</div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\TeamList.js",["110","111","112"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { SelectList } from \"../components/SelectList/SelectList\";\r\nimport { TeamItem } from \"../components/TeamItem/TeamItem\";\r\nimport { clearTeams, filterTeamList, getTeamList } from \"../redux/actions\";\r\nimport styles from \"./pages.module.scss\";\r\n\r\nexport const TeamList = ({ seasons }) => {\r\n    const [leagueValue, setLeagueValue] = useState(\"\");\r\n    const [seasonValue, setSeasonValue] = useState(\"\");\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const leagues = useSelector((state) => state.league.leagues);\r\n    const teams = useSelector((state) => state.team.filteredTeams);\r\n\r\n    useEffect(() => {\r\n        dispatch(clearTeams());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            setLeagueValue(id);\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        let season = history.location.search.split(\"?season=\")[1];\r\n\r\n        if (!season) {\r\n            setSeasonValue(new Date().getFullYear() - 1);\r\n            season = new Date().getFullYear() - 1;\r\n        } else {\r\n            setSeasonValue(season);\r\n        }\r\n\r\n        if (id) {\r\n            dispatch(getTeamList(id, season));\r\n        }\r\n    }, [history]);\r\n\r\n    const formSubmitHandler = () => {\r\n        history.push(`/team_list/${leagueValue}?season=${seasonValue}`);\r\n        dispatch(getTeamList(leagueValue, seasonValue));\r\n    };\r\n\r\n    const inputChangeHandler = (event) => {\r\n        const { value } = event.target;\r\n        setSearchValue(value);\r\n        dispatch(filterTeamList(value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Список команд</h2>\r\n            <form class={styles.simpleForm} onSubmit={formSubmitHandler}>\r\n                <SelectList\r\n                    name=\"Лиги\"\r\n                    items={leagues}\r\n                    value={leagueValue}\r\n                    setValue={(event) => setLeagueValue(event.target.value)}\r\n                />\r\n                <SelectList\r\n                    name=\"Сезоны\"\r\n                    items={seasons}\r\n                    value={seasonValue}\r\n                    setValue={(event) => setSeasonValue(event.target.value)}\r\n                />\r\n                <button disabled={!(leagueValue && seasonValue)}>\r\n                    Показать команды\r\n                </button>\r\n            </form>\r\n            <TextField\r\n                label=\"Поиск по названию\"\r\n                value={searchValue}\r\n                onChange={inputChangeHandler}\r\n                fullWidth\r\n            />\r\n            <ul className={styles.wrapper}>\r\n                {teams.map((team) => (\r\n                    <TeamItem\r\n                        key={team.id}\r\n                        team={team}\r\n                        leagueValue={leagueValue}\r\n                        seasonValue={seasonValue}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\pages\\CalendarTeam.js",["113","114","115"],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { SelectList } from \"../components/SelectList/SelectList\";\r\nimport {\r\n    clearMatches,\r\n    clearTeams,\r\n    filterLeagueMatches,\r\n    getLeagueMatches,\r\n    getTeamList,\r\n} from \"../redux/actions\";\r\nimport styles from \"./pages.module.scss\";\r\n\r\nexport const CalendarTeam = ({ seasons }) => {\r\n    const [leagueValue, setLeagueValue] = useState(\"\");\r\n    const [teamValue, setTeamValue] = useState(\"\");\r\n    const [seasonValue, setSeasonValue] = useState(\"\");\r\n    const [dateFrom, setDateFrom] = useState(\"\");\r\n    const [dateTo, setDateTo] = useState(\"\");\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const { leagueId, teamId } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const leagues = useSelector((state) => state.league.leagues);\r\n    const teams = useSelector((state) => state.team.teams);\r\n    const matches = useSelector((state) => state.match.filteredMatches);\r\n\r\n    useEffect(() => {\r\n        if (leagueId) {\r\n            dispatch(getTeamList(leagueId, seasonValue));\r\n        }\r\n        dispatch(clearTeams());\r\n        dispatch(clearMatches());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (leagueId) {\r\n            setLeagueValue(leagueId);\r\n        }\r\n\r\n        if (teamId) {\r\n            setTeamValue(teamId);\r\n        }\r\n    }, [leagueId, teamId]);\r\n\r\n    useEffect(() => {\r\n        let params = history.location.search.split(\"&\");\r\n\r\n        params.forEach((param) => {\r\n            switch (true) {\r\n                case param.includes(\"season\"):\r\n                    setSeasonValue(param.split(\"=\")[1]);\r\n                    break;\r\n                case param.includes(\"dateFrom\"):\r\n                    setDateFrom(param.split(\"=\")[1]);\r\n                    break;\r\n                case param.includes(\"dateTo\"):\r\n                    setDateTo(param.split(\"=\")[1]);\r\n                    break;\r\n            }\r\n        });\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        if (leagueValue) {\r\n            dispatch(getTeamList(leagueValue, seasonValue));\r\n        }\r\n    }, [leagueValue]);\r\n\r\n    const formSubmitHandler = () => {\r\n        const query = [];\r\n        if (seasonValue) {\r\n            query.push(`season=${seasonValue}`);\r\n        }\r\n\r\n        if (dateFrom && dateTo) {\r\n            query.push(`dateFrom=${dateFrom}`);\r\n            query.push(`dateTo=${dateTo}`);\r\n        }\r\n\r\n        let newUrl = \"\";\r\n\r\n        query.forEach((item, idx) => {\r\n            idx === 0 ? (newUrl += `?${item}`) : (newUrl += `&${item}`);\r\n        });\r\n\r\n        history.push(`/calendar_team/${leagueValue}/${teamValue}${newUrl}`);\r\n        dispatch(getLeagueMatches(leagueValue, seasonValue, dateFrom, dateTo));\r\n    };\r\n\r\n    const handleSeasonChange = (event) => {\r\n        setSeasonValue(event.target.value);\r\n        setDateFrom(\"\");\r\n        setDateTo(\"\");\r\n    };\r\n\r\n    const handleDateFromChange = (event) => {\r\n        setDateFrom(event.target.value);\r\n        setSeasonValue(\"\");\r\n    };\r\n\r\n    const handleDateToChange = (event) => {\r\n        setDateTo(event.target.value);\r\n        setSeasonValue(\"\");\r\n    };\r\n\r\n    const clearDateHandler = () => {\r\n        setDateFrom(\"\");\r\n        setDateTo(\"\");\r\n    };\r\n\r\n    const inputChangeHandler = (event) => {\r\n        const { value } = event.target;\r\n        setSearchValue(value);\r\n        dispatch(filterLeagueMatches(value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>Календарь команд</h2>\r\n            <form className={styles.form} onSubmit={formSubmitHandler}>\r\n                <SelectList\r\n                    name=\"Лиги\"\r\n                    items={leagues}\r\n                    value={leagueValue}\r\n                    setValue={(event) => setLeagueValue(event.target.value)}\r\n                />\r\n\r\n                <SelectList\r\n                    name=\"Команды\"\r\n                    items={teams}\r\n                    value={teamValue}\r\n                    setValue={(event) => setTeamValue(event.target.value)}\r\n                />\r\n                <SelectList\r\n                    name=\"Сезоны\"\r\n                    items={seasons}\r\n                    value={seasonValue}\r\n                    setValue={handleSeasonChange}\r\n                />\r\n                <TextField\r\n                    label=\"Начало периода\"\r\n                    type=\"date\"\r\n                    value={dateFrom}\r\n                    onChange={handleDateFromChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    label=\"Конец периода\"\r\n                    type=\"date\"\r\n                    value={dateTo}\r\n                    onChange={handleDateToChange}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <button\r\n                    className={styles.button}\r\n                    type=\"reset\"\r\n                    onClick={clearDateHandler}\r\n                    disabled={!(dateFrom || dateTo)}\r\n                >\r\n                    Сбросить период\r\n                </button>\r\n                <button\r\n                    className={styles.acept}\r\n                    disabled={\r\n                        !(\r\n                            leagueValue &&\r\n                            teamValue &&\r\n                            (seasonValue || (dateFrom && dateTo))\r\n                        )\r\n                    }\r\n                    type=\"submit\"\r\n                >\r\n                    Показать подходящие матчи\r\n                </button>\r\n            </form>\r\n\r\n            <TextField\r\n                type=\"search\"\r\n                label=\"Поиск по названию команды или туру\"\r\n                value={searchValue}\r\n                onChange={inputChangeHandler}\r\n                fullWidth\r\n            />\r\n\r\n            <div>\r\n                {matches.map(\r\n                    (item) =>\r\n                        (item.homeTeam.id === Number(teamValue) ||\r\n                            item.awayTeam.id === Number(teamValue)) && (\r\n                            <div key={item.id} className={styles.match}>\r\n                                <p className={styles.tour}>\r\n                                    {item.matchday} тур\r\n                                </p>\r\n                                <p className={styles.day}>\r\n                                    {item.utcDate.split(\"T\")[0]}\r\n                                </p>\r\n                                {item.status === \"FINISHED\" ? (\r\n                                    <p className={styles.finished}>\r\n                                        {item.homeTeam.name}{\" \"}\r\n                                        {item.score.fullTime.homeTeam} :{\" \"}\r\n                                        {item.score.fullTime.awayTeam}{\" \"}\r\n                                        {item.awayTeam.name}\r\n                                    </p>\r\n                                ) : (\r\n                                    <p className={styles.versus}>\r\n                                        {item.homeTeam.name} :{\" \"}\r\n                                        {item.awayTeam.name}\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\SelectList\\SelectList.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\LeagueItem\\LeagueItem.js",[],"C:\\Users\\Evgeniy\\Desktop\\dbsb\\React\\test\\src\\components\\TeamItem\\TeamItem.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":34,"nodeType":"122","messageId":"123","endLine":10,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":33,"column":8,"nodeType":"126","endLine":33,"endColumn":10,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"128","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":27,"column":8,"nodeType":"126","endLine":27,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":39,"column":13,"nodeType":"132","messageId":"133","endLine":49,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":22,"column":8,"nodeType":"126","endLine":22,"endColumn":10,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":43,"column":8,"nodeType":"126","endLine":43,"endColumn":17,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":35,"column":8,"nodeType":"126","endLine":35,"endColumn":10,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"131","line":51,"column":13,"nodeType":"132","messageId":"133","endLine":61,"endColumn":14},{"ruleId":"124","severity":1,"message":"140","line":69,"column":8,"nodeType":"126","endLine":69,"endColumn":21,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'ListItemText' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'Button' is defined but never used.",["145"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.",["146"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'dispatch', 'leagueId', and 'seasonValue'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'dispatch' and 'seasonValue'. Either include them or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"150","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},{"range":"162","text":"161"},{"range":"163","text":"161"},"Update the dependencies array to be: [dispatch, history, id]",{"range":"164","text":"165"},"Update the dependencies array to be: [dispatch, leagueId, seasonValue]",{"range":"166","text":"167"},"Update the dependencies array to be: [dispatch, leagueValue, seasonValue]",{"range":"168","text":"169"},[1303,1305],"[dispatch]",[1084,1086],[994,996],[1486,1495],"[dispatch, history, id]",[1356,1358],"[dispatch, leagueId, seasonValue]",[2290,2303],"[dispatch, leagueValue, seasonValue]"]